import java.math.BigInteger;

public class Project029 {
	/**https://projecteuler.net/problem=29
	 * Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

22=4, 23=8, 24=16, 25=32
32=9, 33=27, 34=81, 35=243
42=16, 43=64, 44=256, 45=1024
52=25, 53=125, 54=625, 55=3125
If they are then placed in numerical order, with any repeats removed, we get the 
following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
	 * @param args
	 */
	
	public static void main(String[] args) {
		String[] nums = new String[10000];
		for(int i = 0; i < nums.length; i++) {
			nums[i] = "0";
		}
		
		int count = 0;
		for(int i = 2; i <= 100; i++) {
			for(int j = 2; j <=100; j++) {
				BigInteger a = new BigInteger(i + "");
				a = a.pow(j);
				String str = a.toString();
				if(findIndex(nums,str) == -1) {
					nums[count] = str;
					count++;
				}
			}
		}
		System.out.println(count);
		
	}
	//find index method from geeksforgeeks.org
	//modified to work for strings instead of ints
    public static int findIndex(String arr[], String t) 
    { 
  
        // if array is Null 
        if (arr == null) { 
            return -1; 
        } 
  
        // find length of array 
        int len = arr.length; 
        int i = 0; 
  
        // traverse in the array 
        while (i < len) { 
  
            // if the i-th element is t 
            // then return the index 
            if (arr[i].equals(t)) { 
                return i; 
            } 
            else { 
                i = i + 1; 
            } 
        } 
        return -1; 
    } 

}
