import java.util.ArrayList;
public class Project044 {
	/**
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. 
The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. 
However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, 
for which their sum and difference are pentagonal and 
D = |Pk − Pj| is minimised; what is the value of D?
	 * @param args
	 */

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int smallestDif = -1;
		ArrayList<Integer> list = genPents(10000);
		int[] myList = new int[list.size()];
		for(int i = 0; i < list.size(); i++) {
			myList[i] = list.get(i);
		}
		int count = 0;
		for(int i = 0; i < myList.length; i++) {
			int a = myList[i];
			for(int j = i+1; j < myList.length; j++) {
				int b = myList[j];
				if(checkPent(a+b) && checkPent(Math.abs(a-b))) {
					int diff = Math.abs(a-b);
					if(count == 0) {
						smallestDif = diff;
					}
					count++;
					if(diff < smallestDif) {
						smallestDif = diff;
					}
				}
			}
		}
		System.out.println(smallestDif);
		//5482660 is the correct answer

	}
	public static boolean checkPent(int a) {
		double temp = (Math.sqrt(1 + 24*a) + 1.0)/6.0;
		return temp == ((int)temp);
	}
	public static ArrayList<Integer> genPents(int a){
		ArrayList<Integer> ret = new ArrayList<>();
		for(int i = 1; i <= a; i++) {
			int temp = i * (3 * i - 1) / 2;
			ret.add(temp);
		}		
		return ret;
	}

}
